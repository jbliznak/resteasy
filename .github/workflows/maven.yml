# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  build:

    runs-on: ${{ matrix.os }}
    timeout-minutes: 90
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        java: ['11', '17']
        wildfly-version: ['25.0.1.Final']

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: 8
          distribution: 'temurin'
          cache: 'maven'
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
          cache: 'maven'
      - name: Download server
        run: |
          echo "::group::Get server"
          wget https://github.com/wildfly/wildfly/releases/download/${{ matrix.wildfly-version }}/wildfly-${{ matrix.wildfly-version }}.zip
          unzip -q wildfly-${{ matrix.wildfly-version }}.zip
          echo "::endgroup::"
      - name: Build with Maven Java ${{ matrix.java }} on WildFly ${{ matrix.wildfly-version }} - Linux
        if: runner.os == 'Linux'
        run: |
          echo "::group::Build Logs"
          mvn clean install -U -B -fae -Dserver.home=`pwd`/wildfly-${{ matrix.wildfly-version }} -Dgithub.actions -Djava8.home="$JAVA_HOME_8_X64"
          echo "::endgroup::"
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: surefire-reports-${{ matrix.os }}-${{ matrix.java }}-${{ matrix.wildfly-version }}
          path: '**/surefire-reports/*.txt'
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: server-logs-${{ matrix.os }}-${{ matrix.java }}-${{ matrix.wildfly-version }}
          path: '**/server.log'

  test-with-java8:

    runs-on: ${{ matrix.os }}
    timeout-minutes: 90
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        wildfly-version: ['25.0.1.Final']

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: 8
          distribution: 'temurin'
          cache: 'maven'
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: 'temurin'
          cache: 'maven'
      - name: Download server
        run: |
          echo "::group::Get server"
          wget https://github.com/wildfly/wildfly/releases/download/${{ matrix.wildfly-version }}/wildfly-${{ matrix.wildfly-version }}.zip
          unzip -q wildfly-${{ matrix.wildfly-version }}.zip
          echo "::endgroup::"
      - name: Build with Java 11
        run: |
          echo "::group::Build Logs"
          mvn clean install -U -B -DskipTests
          echo "::endgroup::"
      - name: Test with Java 8 on WildFly ${{ matrix.wildfly-version }} - Linux
        if: runner.os == 'Linux'
        run:  |
          echo "::group::Test Logs"
          mvn clean install -U -B -fae -rf ':resteasy-testsuite' -Dserver.home=`pwd`/wildfly-${{ matrix.wildfly-version }} -Dgithub.actions -Dtest.java8.home="$JAVA_HOME_8_X64"
          echo "::endgroup::"
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: surefire-reports-${{ matrix.os }}-${{ matrix.java }}-${{ matrix.wildfly-version }}
          path: '**/surefire-reports/*.txt'
      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: server-logs-${{ matrix.os }}-${{ matrix.java }}-${{ matrix.wildfly-version }}
          path: '**/server.log'

  build-java-docs:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: 'temurin'
          cache: 'maven'
      - name: Build Java Docs with Java 11
        run: mvn clean install -U -B -DskipTests '-Dmaven.javadoc.skip=false' javadoc:javadoc

